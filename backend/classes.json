[
  {
    "name": "AppService",
    "documentation": "",
    "type": "typeof AppService",
    "constructors": [],
    "path": "",
    "methods": [
      {
        "name": "getHello",
        "documentation": "",
        "parameters": [],
        "returnType": "string",
        "methodPath": ""
      }
    ],
    "properties": []
  },
  {
    "name": "AppController",
    "documentation": "",
    "type": "typeof AppController",
    "constructors": [],
    "path": "",
    "methods": [
      {
        "name": "getHello",
        "documentation": "",
        "parameters": [],
        "returnType": "string",
        "methodPath": "",
        "httpMethod": "GET"
      }
    ],
    "properties": []
  },
  {
    "name": "LoginResponseDto",
    "documentation": "",
    "type": "typeof LoginResponseDto",
    "constructors": [],
    "path": "",
    "methods": [],
    "properties": [
      {
        "name": "access_token",
        "documentation": "",
        "type": "string"
      }
    ]
  },
  {
    "name": "AuthService",
    "documentation": "",
    "type": "typeof AuthService",
    "constructors": [],
    "path": "",
    "methods": [
      {
        "name": "validateUser",
        "documentation": "",
        "parameters": [
          {
            "name": "username",
            "type": "string",
            "decorator": "Unknown"
          },
          {
            "name": "pass",
            "type": "string",
            "decorator": "Unknown"
          }
        ],
        "returnType": "Promise<any>",
        "methodPath": ""
      },
      {
        "name": "login",
        "documentation": "",
        "parameters": [
          {
            "name": "user",
            "type": "any",
            "decorator": "Unknown"
          }
        ],
        "returnType": "Promise<{ access_token: string; user: any; }>",
        "methodPath": ""
      },
      {
        "name": "register",
        "documentation": "",
        "parameters": [
          {
            "name": "createUserDto",
            "type": "CreateUserDto",
            "decorator": "Unknown"
          }
        ],
        "returnType": "Promise<User>",
        "methodPath": ""
      }
    ],
    "properties": []
  },
  {
    "name": "JwtAuthGuard",
    "documentation": "",
    "type": "typeof JwtAuthGuard",
    "constructors": [],
    "path": "",
    "methods": [],
    "properties": []
  },
  {
    "name": "LocalAuthGuard",
    "documentation": "",
    "type": "typeof LocalAuthGuard",
    "constructors": [],
    "path": "",
    "methods": [],
    "properties": []
  },
  {
    "name": "AuthController",
    "documentation": "",
    "type": "typeof AuthController",
    "constructors": [],
    "path": "auth",
    "methods": [
      {
        "name": "login",
        "documentation": "",
        "parameters": [
          {
            "name": "req",
            "type": "any",
            "decorator": "Unknown"
          }
        ],
        "returnType": "Promise<{ access_token: string; user: any; }>",
        "methodPath": "login",
        "httpMethod": "POST"
      },
      {
        "name": "register",
        "documentation": "",
        "parameters": [
          {
            "name": "createUserDto",
            "type": "CreateUserDto",
            "decorator": "Body"
          }
        ],
        "returnType": "Promise<User>",
        "methodPath": "register",
        "httpMethod": "POST"
      }
    ],
    "properties": []
  },
  {
    "name": "JwtStrategy",
    "documentation": "",
    "type": "typeof JwtStrategy",
    "constructors": [],
    "path": "",
    "methods": [
      {
        "name": "validate",
        "documentation": "",
        "parameters": [
          {
            "name": "payload",
            "type": "any",
            "decorator": "Unknown"
          }
        ],
        "returnType": "Promise<{ userId: any; username: any; }>",
        "methodPath": ""
      }
    ],
    "properties": []
  },
  {
    "name": "LocalStrategy",
    "documentation": "",
    "type": "typeof LocalStrategy",
    "constructors": [],
    "path": "",
    "methods": [
      {
        "name": "validate",
        "documentation": "",
        "parameters": [
          {
            "name": "username",
            "type": "string",
            "decorator": "Unknown"
          },
          {
            "name": "password",
            "type": "string",
            "decorator": "Unknown"
          }
        ],
        "returnType": "Promise<any>",
        "methodPath": ""
      },
      {
        "name": "authenticate",
        "documentation": "Performs authentication for the request.\nNote: Virtual function - re-implement in the strategy.",
        "parameters": [
          {
            "name": "req",
            "type": "Request<ParamsDictionary, any, any, ParsedQs, Record<string, any>>",
            "decorator": "Unknown"
          },
          {
            "name": "options",
            "type": "any",
            "decorator": "Unknown"
          }
        ],
        "returnType": "void",
        "methodPath": ""
      },
      {
        "name": "success",
        "documentation": "Authenticate `user`, with optional `info`.\n\nStrategies should call this function to successfully authenticate a\nuser.  `user` should be an object supplied by the application after it\nhas been given an opportunity to verify credentials.  `info` is an\noptional argument containing additional user information.  This is\nuseful for third-party authentication strategies to pass profile\ndetails.",
        "parameters": [
          {
            "name": "user",
            "type": "any",
            "decorator": "Unknown"
          },
          {
            "name": "info",
            "type": "any",
            "decorator": "Unknown"
          }
        ],
        "returnType": "void",
        "methodPath": ""
      },
      {
        "name": "fail",
        "documentation": "Fail authentication, with optional `challenge` and `status`, defaulting\nto 401.\n\nStrategies should call this function to fail an authentication attempt.",
        "parameters": [
          {
            "name": "challenge",
            "type": "any",
            "decorator": "Unknown"
          },
          {
            "name": "status",
            "type": "number",
            "decorator": "Unknown"
          }
        ],
        "returnType": "void",
        "methodPath": ""
      },
      {
        "name": "redirect",
        "documentation": "Redirect to `url` with optional `status`, defaulting to 302.\n\nStrategies should call this function to redirect the user (via their\nuser agent) to a third-party website for authentication.",
        "parameters": [
          {
            "name": "url",
            "type": "string",
            "decorator": "Unknown"
          },
          {
            "name": "status",
            "type": "number",
            "decorator": "Unknown"
          }
        ],
        "returnType": "void",
        "methodPath": ""
      },
      {
        "name": "pass",
        "documentation": "Pass without making a success or fail decision.\n\nUnder most circumstances, Strategies should not need to call this\nfunction.  It exists primarily to allow previous authentication state\nto be restored, for example from an HTTP session.",
        "parameters": [],
        "returnType": "void",
        "methodPath": ""
      },
      {
        "name": "error",
        "documentation": "Internal error while performing authentication.\n\nStrategies should call this function when an internal error occurs\nduring the process of performing authentication; for example, if the\nuser directory is not available.",
        "parameters": [
          {
            "name": "err",
            "type": "Error",
            "decorator": "Unknown"
          }
        ],
        "returnType": "void",
        "methodPath": ""
      }
    ],
    "properties": [
      {
        "name": "name",
        "documentation": "",
        "type": "string"
      }
    ]
  },
  {
    "name": "AuthModule",
    "documentation": "",
    "type": "typeof AuthModule",
    "constructors": [],
    "path": "",
    "methods": [],
    "properties": []
  },
  {
    "name": "CurveElementSkeletonDto",
    "documentation": "",
    "type": "typeof CurveElementSkeletonDto",
    "constructors": [],
    "path": "",
    "methods": [],
    "properties": [
      {
        "name": "points",
        "documentation": "",
        "type": "number[]"
      },
      {
        "name": "id",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "fill",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "text",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "roughness",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "bowing",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "seed",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "strokeWidth",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "strokeStyle",
        "documentation": "",
        "type": "\"solid\" | \"dashed\" | \"dotted\""
      },
      {
        "name": "stroke",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "fillStyle",
        "documentation": "",
        "type": "\"solid\" | \"dashed\" | \"hachure\" | \"cross-hatch\" | \"zigzag\" | \"dots\" | \"zigzag-line\""
      },
      {
        "name": "fillWeight",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "hachureAngle",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "hachureGap",
        "documentation": "",
        "type": "number"
      }
    ]
  },
  {
    "name": "StartType",
    "documentation": "",
    "type": "StartType",
    "path": "/home/elevinas123/Documents/coding/easyLibrary/backend/src/book/dto/curveElementsDto/elements/arrowElement.dto.ts"
  },
  {
    "name": "ArrowElementDto",
    "documentation": "",
    "type": "typeof ArrowElementDto",
    "constructors": [],
    "path": "",
    "methods": [],
    "properties": [
      {
        "name": "type",
        "documentation": "",
        "type": "\"arrow\""
      },
      {
        "name": "startId",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "endId",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "startType",
        "documentation": "",
        "type": "StartType"
      },
      {
        "name": "endType",
        "documentation": "",
        "type": "StartType"
      },
      {
        "name": "points",
        "documentation": "",
        "type": "number[]"
      },
      {
        "name": "id",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "fill",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "text",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "roughness",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "bowing",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "seed",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "strokeWidth",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "strokeStyle",
        "documentation": "",
        "type": "\"solid\" | \"dashed\" | \"dotted\""
      },
      {
        "name": "stroke",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "fillStyle",
        "documentation": "",
        "type": "\"solid\" | \"dashed\" | \"hachure\" | \"cross-hatch\" | \"zigzag\" | \"dots\" | \"zigzag-line\""
      },
      {
        "name": "fillWeight",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "hachureAngle",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "hachureGap",
        "documentation": "",
        "type": "number"
      }
    ]
  },
  {
    "name": "CurveElementsDto",
    "documentation": "",
    "type": "typeof CurveElementsDto",
    "constructors": [],
    "path": "",
    "methods": [],
    "properties": [
      {
        "name": "curveElements",
        "documentation": "",
        "type": "ArrowElementDto[]"
      }
    ]
  },
  {
    "name": "HighlightPointsDto",
    "documentation": "",
    "type": "typeof HighlightPointsDto",
    "constructors": [],
    "path": "",
    "methods": [],
    "properties": [
      {
        "name": "x",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "y",
        "documentation": "",
        "type": "number"
      }
    ]
  },
  {
    "name": "CanvaElementSkeletonDto",
    "documentation": "",
    "type": "typeof CanvaElementSkeletonDto",
    "constructors": [],
    "path": "",
    "methods": [],
    "properties": [
      {
        "name": "fill",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "x",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "y",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "width",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "height",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "id",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "outgoingArrowIds",
        "documentation": "",
        "type": "string[]"
      },
      {
        "name": "incomingArrowIds",
        "documentation": "",
        "type": "string[]"
      },
      {
        "name": "points",
        "documentation": "",
        "type": "HighlightPointsDto[]"
      },
      {
        "name": "strokeColor",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "strokeWidth",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "opacity",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "rotation",
        "documentation": "",
        "type": "number"
      }
    ]
  },
  {
    "name": "TextElementDto",
    "documentation": "",
    "type": "typeof TextElementDto",
    "constructors": [],
    "path": "",
    "methods": [],
    "properties": [
      {
        "name": "type",
        "documentation": "",
        "type": "\"text\""
      },
      {
        "name": "text",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "fontFamily",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "fontSize",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "fill",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "x",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "y",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "width",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "height",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "id",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "outgoingArrowIds",
        "documentation": "",
        "type": "string[]"
      },
      {
        "name": "incomingArrowIds",
        "documentation": "",
        "type": "string[]"
      },
      {
        "name": "points",
        "documentation": "",
        "type": "HighlightPointsDto[]"
      },
      {
        "name": "strokeColor",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "strokeWidth",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "opacity",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "rotation",
        "documentation": "",
        "type": "number"
      }
    ]
  },
  {
    "name": "RectElementDto",
    "documentation": "",
    "type": "typeof RectElementDto",
    "constructors": [],
    "path": "",
    "methods": [],
    "properties": [
      {
        "name": "type",
        "documentation": "",
        "type": "\"rect\""
      },
      {
        "name": "roughness",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "seed",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "fillStyle",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "hachureGap",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "hachureAngle",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "fill",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "x",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "y",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "width",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "height",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "id",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "outgoingArrowIds",
        "documentation": "",
        "type": "string[]"
      },
      {
        "name": "incomingArrowIds",
        "documentation": "",
        "type": "string[]"
      },
      {
        "name": "points",
        "documentation": "",
        "type": "HighlightPointsDto[]"
      },
      {
        "name": "strokeColor",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "strokeWidth",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "opacity",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "rotation",
        "documentation": "",
        "type": "number"
      }
    ]
  },
  {
    "name": "CanvaElementsDto",
    "documentation": "",
    "type": "typeof CanvaElementsDto",
    "constructors": [],
    "path": "",
    "methods": [],
    "properties": []
  },
  {
    "name": "ProcessedElementDto",
    "documentation": "",
    "type": "typeof ProcessedElementDto",
    "constructors": [],
    "path": "",
    "methods": [],
    "properties": [
      {
        "name": "text",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "lineX",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "lineWidth",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "lineY",
        "documentation": "",
        "type": "number"
      }
    ]
  },
  {
    "name": "BookElementsDto",
    "documentation": "",
    "type": "typeof BookElementsDto",
    "constructors": [],
    "path": "",
    "methods": [],
    "properties": []
  },
  {
    "name": "OffsetPositionDto",
    "documentation": "",
    "type": "typeof OffsetPositionDto",
    "constructors": [],
    "path": "",
    "methods": [],
    "properties": [
      {
        "name": "x",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "y",
        "documentation": "",
        "type": "number"
      }
    ]
  },
  {
    "name": "CreateBookDto",
    "documentation": "",
    "type": "typeof CreateBookDto",
    "constructors": [],
    "path": "",
    "methods": [],
    "properties": [
      {
        "name": "title",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "userId",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "description",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "author",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "genre",
        "documentation": "",
        "type": "string[]"
      },
      {
        "name": "imageUrl",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "liked",
        "documentation": "",
        "type": "boolean"
      },
      {
        "name": "dateAdded",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "bookElements",
        "documentation": "",
        "type": "ProcessedElementDto[]"
      },
      {
        "name": "canvaElements",
        "documentation": "",
        "type": "(TextElementDto | RectElementDto)[]"
      },
      {
        "name": "scale",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "curveElements",
        "documentation": "",
        "type": "ArrowElementDto[]"
      },
      {
        "name": "offsetPosition",
        "documentation": "",
        "type": "OffsetPositionDto"
      }
    ]
  },
  {
    "name": "HighlightsDto",
    "documentation": "",
    "type": "typeof HighlightsDto",
    "constructors": [],
    "path": "",
    "methods": [],
    "properties": [
      {
        "name": "highlights",
        "documentation": "",
        "type": "HighlightDto[]"
      }
    ]
  },
  {
    "name": "HighlightDto",
    "documentation": "",
    "type": "typeof HighlightDto",
    "constructors": [],
    "path": "",
    "methods": [],
    "properties": [
      {
        "name": "id",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "startingX",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "startingY",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "endX",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "endY",
        "documentation": "",
        "type": "number"
      }
    ]
  },
  {
    "name": "UpdateBookDto",
    "documentation": "",
    "type": "typeof UpdateBookDto",
    "constructors": [],
    "path": "",
    "methods": [],
    "properties": [
      {
        "name": "bookElements",
        "documentation": "",
        "type": "ProcessedElementDto[]"
      },
      {
        "name": "canvaElements",
        "documentation": "",
        "type": "(TextElementDto | RectElementDto)[]"
      },
      {
        "name": "curveElements",
        "documentation": "",
        "type": "ArrowElementDto[]"
      },
      {
        "name": "highlights",
        "documentation": "",
        "type": "HighlightDto[]"
      },
      {
        "name": "liked",
        "documentation": "",
        "type": "boolean"
      },
      {
        "name": "scale",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "offsetPosition",
        "documentation": "",
        "type": "{ x: number; y: number; }"
      },
      {
        "name": "title",
        "documentation": "",
        "type": "any"
      },
      {
        "name": "userId",
        "documentation": "",
        "type": "any"
      },
      {
        "name": "description",
        "documentation": "",
        "type": "any"
      },
      {
        "name": "author",
        "documentation": "",
        "type": "any"
      },
      {
        "name": "genre",
        "documentation": "",
        "type": "any"
      },
      {
        "name": "imageUrl",
        "documentation": "",
        "type": "any"
      },
      {
        "name": "dateAdded",
        "documentation": "",
        "type": "any"
      }
    ]
  },
  {
    "name": "ProcessedElement",
    "documentation": "",
    "type": "typeof ProcessedElement",
    "constructors": [],
    "path": "",
    "methods": [],
    "properties": [
      {
        "name": "text",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "lineX",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "lineWidth",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "lineY",
        "documentation": "",
        "type": "number"
      }
    ]
  },
  {
    "name": "ProcessedElementDocument",
    "documentation": "",
    "type": "ProcessedElementDocument",
    "path": "/home/elevinas123/Documents/coding/easyLibrary/backend/src/book/schema/bookElements/processedElement.schema.ts"
  },
  {
    "name": "HighlightPointsType",
    "documentation": "",
    "type": "HighlightPointsType",
    "path": "/home/elevinas123/Documents/coding/easyLibrary/backend/src/book/schema/canvaElements/highlightPoints.schema.ts"
  },
  {
    "name": "HighlightPoints",
    "documentation": "",
    "type": "typeof HighlightPoints",
    "constructors": [],
    "path": "",
    "methods": [],
    "properties": [
      {
        "name": "x",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "y",
        "documentation": "",
        "type": "number"
      }
    ]
  },
  {
    "name": "HighlightPointsDocument",
    "documentation": "",
    "type": "HighlightPointsDocument",
    "path": "/home/elevinas123/Documents/coding/easyLibrary/backend/src/book/schema/canvaElements/highlightPoints.schema.ts"
  },
  {
    "name": "RectElementType",
    "documentation": "",
    "properties": [
      {
        "name": "fill",
        "type": "string"
      },
      {
        "name": "x",
        "type": "number"
      },
      {
        "name": "y",
        "type": "number"
      },
      {
        "name": "width",
        "type": "number"
      },
      {
        "name": "height",
        "type": "number"
      },
      {
        "name": "id",
        "type": "string"
      },
      {
        "name": "outgoingArrowIds",
        "type": "string[]"
      },
      {
        "name": "incomingArrowIds",
        "type": "string[]"
      },
      {
        "name": "points",
        "type": "HighlightPointsType[]"
      },
      {
        "name": "strokeColor",
        "type": "string"
      },
      {
        "name": "strokeWidth",
        "type": "number"
      },
      {
        "name": "opacity",
        "type": "number"
      }
    ],
    "path": "/home/elevinas123/Documents/coding/easyLibrary/backend/src/book/schema/canvaElements/elements/rectElement.schema.ts"
  },
  {
    "name": "RectElement",
    "documentation": "",
    "type": "typeof RectElement",
    "constructors": [],
    "path": "",
    "methods": [],
    "properties": [
      {
        "name": "fillStyle",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "roughness",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "seed",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "hachureGap",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "hachureAngle",
        "documentation": "",
        "type": "number"
      }
    ]
  },
  {
    "name": "RectElementDocument",
    "documentation": "",
    "type": "RectElementDocument",
    "path": "/home/elevinas123/Documents/coding/easyLibrary/backend/src/book/schema/canvaElements/elements/rectElement.schema.ts"
  },
  {
    "name": "TextElementType",
    "documentation": "",
    "properties": [
      {
        "name": "text",
        "type": "string"
      },
      {
        "name": "fontFamily",
        "type": "string"
      },
      {
        "name": "fontSize",
        "type": "number"
      },
      {
        "name": "fill",
        "type": "string"
      },
      {
        "name": "x",
        "type": "number"
      },
      {
        "name": "y",
        "type": "number"
      },
      {
        "name": "width",
        "type": "number"
      },
      {
        "name": "height",
        "type": "number"
      },
      {
        "name": "id",
        "type": "string"
      },
      {
        "name": "outgoingArrowIds",
        "type": "string[]"
      },
      {
        "name": "incomingArrowIds",
        "type": "string[]"
      },
      {
        "name": "points",
        "type": "HighlightPointsType[]"
      },
      {
        "name": "strokeColor",
        "type": "string"
      },
      {
        "name": "strokeWidth",
        "type": "number"
      },
      {
        "name": "opacity",
        "type": "number"
      }
    ],
    "path": "/home/elevinas123/Documents/coding/easyLibrary/backend/src/book/schema/canvaElements/elements/textElement.schema.ts"
  },
  {
    "name": "TextElement",
    "documentation": "",
    "type": "typeof TextElement",
    "constructors": [],
    "path": "",
    "methods": [],
    "properties": [
      {
        "name": "text",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "fontFamily",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "fontSize",
        "documentation": "",
        "type": "number"
      }
    ]
  },
  {
    "name": "TextElementDocument",
    "documentation": "",
    "type": "TextElementDocument",
    "path": "/home/elevinas123/Documents/coding/easyLibrary/backend/src/book/schema/canvaElements/elements/textElement.schema.ts"
  },
  {
    "name": "CanvaElementSkeletonType",
    "documentation": "",
    "type": "CanvaElementSkeletonType",
    "path": "/home/elevinas123/Documents/coding/easyLibrary/backend/src/book/schema/canvaElements/canvaElementSkeleton.ts"
  },
  {
    "name": "CanvaElementSkeleton",
    "documentation": "",
    "type": "typeof CanvaElementSkeleton",
    "constructors": [],
    "path": "",
    "methods": [],
    "properties": [
      {
        "name": "fill",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "x",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "y",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "width",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "height",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "id",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "outgoingArrowIds",
        "documentation": "",
        "type": "string[]"
      },
      {
        "name": "incomingArrowIds",
        "documentation": "",
        "type": "string[]"
      },
      {
        "name": "points",
        "documentation": "",
        "type": "HighlightPointsType[]"
      },
      {
        "name": "strokeColor",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "strokeWidth",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "opacity",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "rotation",
        "documentation": "",
        "type": "number"
      }
    ]
  },
  {
    "name": "CanvaElementSkeletonDocument",
    "documentation": "",
    "type": "CanvaElementSkeletonDocument",
    "path": "/home/elevinas123/Documents/coding/easyLibrary/backend/src/book/schema/canvaElements/canvaElementSkeleton.ts"
  },
  {
    "name": "ArrowElementType",
    "documentation": "",
    "properties": [
      {
        "name": "type",
        "type": "\"arrow\""
      },
      {
        "name": "startId",
        "type": "string"
      },
      {
        "name": "endId",
        "type": "string"
      },
      {
        "name": "startType",
        "type": "\"StartTyp\""
      },
      {
        "name": "endType",
        "type": "StartType"
      },
      {
        "name": "points",
        "type": "number[]"
      },
      {
        "name": "id",
        "type": "string"
      },
      {
        "name": "fill",
        "type": "string"
      },
      {
        "name": "text",
        "type": "string"
      },
      {
        "name": "roughness",
        "type": "number"
      },
      {
        "name": "bowing",
        "type": "number"
      },
      {
        "name": "seed",
        "type": "number"
      },
      {
        "name": "strokeWidth",
        "type": "number"
      },
      {
        "name": "strokeStyle",
        "type": "\"solid\" | \"dashed\" | \"dotted\""
      },
      {
        "name": "stroke",
        "type": "string"
      },
      {
        "name": "fillStyle",
        "type": "\"solid\" | \"dashed\" | \"hachure\" | \"cross-hatch\" | \"zigzag\" | \"dots\" | \"zigzag-line\""
      },
      {
        "name": "fillWeight",
        "type": "number"
      },
      {
        "name": "hachureAngle",
        "type": "number"
      },
      {
        "name": "hachureGap",
        "type": "number"
      }
    ],
    "path": "/home/elevinas123/Documents/coding/easyLibrary/backend/src/book/schema/curveElements/elements/arrowElement.schema.ts"
  },
  {
    "name": "StartType",
    "documentation": "",
    "type": "StartType",
    "path": "/home/elevinas123/Documents/coding/easyLibrary/backend/src/book/schema/curveElements/elements/arrowElement.schema.ts"
  },
  {
    "name": "ArrowElement",
    "documentation": "",
    "type": "typeof ArrowElement",
    "constructors": [],
    "path": "",
    "methods": [],
    "properties": [
      {
        "name": "startId",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "endId",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "startType",
        "documentation": "",
        "type": "StartType"
      },
      {
        "name": "endType",
        "documentation": "",
        "type": "StartType"
      }
    ]
  },
  {
    "name": "ArrowElementDocument",
    "documentation": "",
    "type": "ArrowElementDocument",
    "path": "/home/elevinas123/Documents/coding/easyLibrary/backend/src/book/schema/curveElements/elements/arrowElement.schema.ts"
  },
  {
    "name": "CurveElementSkeletonType",
    "documentation": "",
    "properties": [
      {
        "name": "points",
        "type": "number[]"
      },
      {
        "name": "id",
        "type": "string"
      },
      {
        "name": "fill",
        "type": "string"
      },
      {
        "name": "text",
        "type": "string"
      },
      {
        "name": "roughness",
        "type": "number"
      },
      {
        "name": "bowing",
        "type": "number"
      },
      {
        "name": "seed",
        "type": "number"
      },
      {
        "name": "strokeWidth",
        "type": "number"
      },
      {
        "name": "strokeStyle",
        "type": "\"solid\" | \"dashed\" | \"dotted\""
      },
      {
        "name": "stroke",
        "type": "string"
      },
      {
        "name": "fillStyle",
        "type": "\"solid\" | \"dashed\" | \"hachure\" | \"cross-hatch\" | \"zigzag\" | \"dots\" | \"zigzag-line\""
      },
      {
        "name": "fillWeight",
        "type": "number"
      },
      {
        "name": "hachureAngle",
        "type": "number"
      },
      {
        "name": "hachureGap",
        "type": "number"
      }
    ],
    "path": "/home/elevinas123/Documents/coding/easyLibrary/backend/src/book/schema/curveElements/curveElementSkeleton.ts"
  },
  {
    "name": "CurveElementSkeleton",
    "documentation": "",
    "type": "typeof CurveElementSkeleton",
    "constructors": [],
    "path": "",
    "methods": [],
    "properties": [
      {
        "name": "id",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "fill",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "points",
        "documentation": "",
        "type": "number[]"
      },
      {
        "name": "text",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "roughness",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "bowing",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "seed",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "strokeWidth",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "strokeStyle",
        "documentation": "",
        "type": "\"solid\" | \"dashed\" | \"dotted\""
      },
      {
        "name": "stroke",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "fillStyle",
        "documentation": "",
        "type": "\"solid\" | \"dashed\" | \"hachure\" | \"cross-hatch\" | \"zigzag\" | \"dots\" | \"zigzag-line\""
      },
      {
        "name": "fillWeight",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "hachureAngle",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "hachureGap",
        "documentation": "",
        "type": "number"
      }
    ]
  },
  {
    "name": "CurveElementSkeletonDocument",
    "documentation": "",
    "type": "CurveElementSkeletonDocument",
    "path": "/home/elevinas123/Documents/coding/easyLibrary/backend/src/book/schema/curveElements/curveElementSkeleton.ts"
  },
  {
    "name": "HighlightType",
    "documentation": "",
    "type": "HighlightType",
    "path": "/home/elevinas123/Documents/coding/easyLibrary/backend/src/book/schema/highlights/highlights.schema.ts"
  },
  {
    "name": "HighlightDocument",
    "documentation": "",
    "type": "HighlightDocument",
    "path": "/home/elevinas123/Documents/coding/easyLibrary/backend/src/book/schema/highlights/highlights.schema.ts"
  },
  {
    "name": "Highlight",
    "documentation": "",
    "type": "typeof Highlight",
    "constructors": [],
    "path": "",
    "methods": [],
    "properties": [
      {
        "name": "id",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "startingX",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "startingY",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "endX",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "endY",
        "documentation": "",
        "type": "number"
      }
    ]
  },
  {
    "name": "BookDocument",
    "documentation": "",
    "type": "BookDocument",
    "path": "/home/elevinas123/Documents/coding/easyLibrary/backend/src/book/schema/book.schema.ts"
  },
  {
    "name": "Book",
    "documentation": "",
    "type": "typeof Book",
    "constructors": [],
    "path": "",
    "methods": [],
    "properties": [
      {
        "name": "title",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "userId",
        "documentation": "",
        "type": "ObjectId"
      },
      {
        "name": "description",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "author",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "genre",
        "documentation": "",
        "type": "string[]"
      },
      {
        "name": "imageUrl",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "liked",
        "documentation": "",
        "type": "boolean"
      },
      {
        "name": "dateAdded",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "bookElements",
        "documentation": "",
        "type": "ProcessedElement[]"
      },
      {
        "name": "highlights",
        "documentation": "",
        "type": "Highlight[]"
      },
      {
        "name": "canvaElements",
        "documentation": "",
        "type": "(RectElement | TextElement)[]"
      },
      {
        "name": "curveElements",
        "documentation": "",
        "type": "ArrowElement[]"
      },
      {
        "name": "scale",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "offsetPosition",
        "documentation": "",
        "type": "{ x: number; y: number; }"
      }
    ]
  },
  {
    "name": "BookService",
    "documentation": "",
    "type": "typeof BookService",
    "constructors": [],
    "path": "",
    "methods": [
      {
        "name": "addBook",
        "documentation": "",
        "parameters": [
          {
            "name": "createBookDto",
            "type": "CreateBookDto",
            "decorator": "Unknown"
          }
        ],
        "returnType": "Promise<Book>",
        "methodPath": ""
      },
      {
        "name": "getAllBooks",
        "documentation": "",
        "parameters": [],
        "returnType": "Promise<Book[]>",
        "methodPath": ""
      },
      {
        "name": "getUserBooks",
        "documentation": "",
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "decorator": "Unknown"
          }
        ],
        "returnType": "Promise<Book[]>",
        "methodPath": ""
      },
      {
        "name": "getBookById",
        "documentation": "",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "decorator": "Unknown"
          }
        ],
        "returnType": "Promise<Book>",
        "methodPath": ""
      },
      {
        "name": "updateBook",
        "documentation": "",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "decorator": "Unknown"
          },
          {
            "name": "updateBookDto",
            "type": "UpdateBookDto",
            "decorator": "Unknown"
          }
        ],
        "returnType": "Promise<Book>",
        "methodPath": ""
      },
      {
        "name": "deleteBook",
        "documentation": "",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "decorator": "Unknown"
          }
        ],
        "returnType": "Promise<Book>",
        "methodPath": ""
      }
    ],
    "properties": []
  },
  {
    "name": "BookController",
    "documentation": "",
    "type": "typeof BookController",
    "constructors": [],
    "path": "book",
    "methods": [
      {
        "name": "getAllBooks",
        "documentation": "",
        "parameters": [],
        "returnType": "Promise<Book[]>",
        "methodPath": "",
        "httpMethod": "GET"
      },
      {
        "name": "getUserBooks",
        "documentation": "",
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "decorator": "Query"
          }
        ],
        "returnType": "Promise<Book[]>",
        "methodPath": "/getUserBooks",
        "httpMethod": "GET"
      },
      {
        "name": "updateBook",
        "documentation": "",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "decorator": "Param"
          },
          {
            "name": "updateBookDto",
            "type": "UpdateBookDto",
            "decorator": "Body"
          }
        ],
        "returnType": "Promise<Book>",
        "methodPath": ":id",
        "httpMethod": "PATCH"
      },
      {
        "name": "getBookById",
        "documentation": "",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "decorator": "Param"
          }
        ],
        "returnType": "Promise<Book>",
        "methodPath": ":id",
        "httpMethod": "GET"
      },
      {
        "name": "addBook",
        "documentation": "",
        "parameters": [
          {
            "name": "createBookDto",
            "type": "CreateBookDto",
            "decorator": "Body"
          }
        ],
        "returnType": "Promise<Book>",
        "methodPath": "",
        "httpMethod": "POST"
      },
      {
        "name": "deleteBook",
        "documentation": "",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "decorator": "Param"
          }
        ],
        "returnType": "Promise<Book>",
        "methodPath": ":id",
        "httpMethod": "DELETE"
      }
    ],
    "properties": []
  },
  {
    "name": "BookModule",
    "documentation": "",
    "type": "typeof BookModule",
    "constructors": [],
    "path": "",
    "methods": [],
    "properties": []
  },
  {
    "name": "CreateBookshelveDto",
    "documentation": "",
    "type": "typeof CreateBookshelveDto",
    "constructors": [],
    "path": "",
    "methods": [],
    "properties": [
      {
        "name": "name",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "createdAt",
        "documentation": "",
        "type": "Date"
      },
      {
        "name": "books",
        "documentation": "",
        "type": "ObjectId[]"
      }
    ]
  },
  {
    "name": "BookshelveDocument",
    "documentation": "",
    "type": "BookshelveDocument",
    "path": "/home/elevinas123/Documents/coding/easyLibrary/backend/src/bookshelve/schema/bookshelve-schema.ts"
  },
  {
    "name": "Bookshelve",
    "documentation": "",
    "type": "typeof Bookshelve",
    "constructors": [],
    "path": "",
    "methods": [],
    "properties": [
      {
        "name": "name",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "createdAt",
        "documentation": "",
        "type": "Date"
      },
      {
        "name": "books",
        "documentation": "",
        "type": "ObjectId[]"
      }
    ]
  },
  {
    "name": "BookshelveService",
    "documentation": "",
    "type": "typeof BookshelveService",
    "constructors": [],
    "path": "",
    "methods": [
      {
        "name": "addBookshelve",
        "documentation": "",
        "parameters": [
          {
            "name": "createBookshelveDto",
            "type": "CreateBookshelveDto",
            "decorator": "Unknown"
          }
        ],
        "returnType": "Promise<Bookshelve>",
        "methodPath": ""
      },
      {
        "name": "getAllBookshelves",
        "documentation": "",
        "parameters": [],
        "returnType": "Promise<Bookshelve[]>",
        "methodPath": ""
      },
      {
        "name": "getBookshelveById",
        "documentation": "",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "decorator": "Unknown"
          }
        ],
        "returnType": "Promise<Bookshelve>",
        "methodPath": ""
      },
      {
        "name": "updateBookshelve",
        "documentation": "",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "decorator": "Unknown"
          },
          {
            "name": "updatedBookDto",
            "type": "CreateBookshelveDto",
            "decorator": "Unknown"
          }
        ],
        "returnType": "Promise<Bookshelve>",
        "methodPath": ""
      },
      {
        "name": "addBookToBookshelve",
        "documentation": "",
        "parameters": [
          {
            "name": "bookshelveId",
            "type": "string",
            "decorator": "Unknown"
          },
          {
            "name": "bookId",
            "type": "string",
            "decorator": "Unknown"
          }
        ],
        "returnType": "Promise<Bookshelve>",
        "methodPath": ""
      },
      {
        "name": "deleteBookshelve",
        "documentation": "",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "decorator": "Unknown"
          }
        ],
        "returnType": "Promise<Bookshelve>",
        "methodPath": ""
      }
    ],
    "properties": []
  },
  {
    "name": "BookshelveController",
    "documentation": "",
    "type": "typeof BookshelveController",
    "constructors": [],
    "path": "bookshelve",
    "methods": [
      {
        "name": "getAllBooks",
        "documentation": "",
        "parameters": [],
        "returnType": "Promise<Bookshelve[]>",
        "methodPath": "",
        "httpMethod": "GET"
      },
      {
        "name": "addBook",
        "documentation": "",
        "parameters": [
          {
            "name": "createBookDto",
            "type": "CreateBookshelveDto",
            "decorator": "Body"
          }
        ],
        "returnType": "Promise<Bookshelve>",
        "methodPath": "",
        "httpMethod": "POST"
      },
      {
        "name": "updateBook",
        "documentation": "",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "decorator": "Param"
          },
          {
            "name": "updatedBookDto",
            "type": "CreateBookshelveDto",
            "decorator": "Body"
          }
        ],
        "returnType": "Promise<Bookshelve>",
        "methodPath": ":id",
        "httpMethod": "PUT"
      },
      {
        "name": "deleteBook",
        "documentation": "",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "decorator": "Param"
          }
        ],
        "returnType": "Promise<Bookshelve>",
        "methodPath": ":id",
        "httpMethod": "DELETE"
      }
    ],
    "properties": []
  },
  {
    "name": "BookshelveModule",
    "documentation": "",
    "type": "typeof BookshelveModule",
    "constructors": [],
    "path": "",
    "methods": [],
    "properties": []
  },
  {
    "name": "UserDocument",
    "documentation": "",
    "type": "UserDocument",
    "path": "/home/elevinas123/Documents/coding/easyLibrary/backend/src/user/schemas/user.schema.ts"
  },
  {
    "name": "User",
    "documentation": "",
    "type": "typeof User",
    "constructors": [],
    "path": "",
    "methods": [],
    "properties": [
      {
        "name": "username",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "age",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "password",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "comment",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "books",
        "documentation": "",
        "type": "ObjectId[]"
      },
      {
        "name": "bookshelves",
        "documentation": "",
        "type": "ObjectId[]"
      }
    ]
  },
  {
    "name": "CreateUserDto",
    "documentation": "",
    "type": "typeof CreateUserDto",
    "constructors": [],
    "path": "",
    "methods": [],
    "properties": [
      {
        "name": "username",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "password",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "age",
        "documentation": "",
        "type": "number"
      },
      {
        "name": "comment",
        "documentation": "",
        "type": "string"
      },
      {
        "name": "books",
        "documentation": "",
        "type": "string[]"
      },
      {
        "name": "bookshelves",
        "documentation": "",
        "type": "string[]"
      }
    ]
  },
  {
    "name": "UserService",
    "documentation": "",
    "type": "typeof UserService",
    "constructors": [],
    "path": "",
    "methods": [
      {
        "name": "create",
        "documentation": "",
        "parameters": [
          {
            "name": "createUserDto",
            "type": "CreateUserDto",
            "decorator": "Unknown"
          }
        ],
        "returnType": "Promise<User>",
        "methodPath": ""
      },
      {
        "name": "findAll",
        "documentation": "",
        "parameters": [],
        "returnType": "Promise<User[]>",
        "methodPath": ""
      },
      {
        "name": "findOneByUsername",
        "documentation": "",
        "parameters": [
          {
            "name": "username",
            "type": "string",
            "decorator": "Unknown"
          }
        ],
        "returnType": "Promise<User>",
        "methodPath": ""
      },
      {
        "name": "findOneByJwtPayload",
        "documentation": "",
        "parameters": [
          {
            "name": "jwt",
            "type": "string",
            "decorator": "Unknown"
          }
        ],
        "returnType": "Promise<User>",
        "methodPath": ""
      },
      {
        "name": "findOne",
        "documentation": "",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "decorator": "Unknown"
          }
        ],
        "returnType": "Promise<User>",
        "methodPath": ""
      },
      {
        "name": "update",
        "documentation": "",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "decorator": "Unknown"
          },
          {
            "name": "updateUserDto",
            "type": "CreateUserDto",
            "decorator": "Unknown"
          }
        ],
        "returnType": "Promise<User>",
        "methodPath": ""
      },
      {
        "name": "remove",
        "documentation": "",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "decorator": "Unknown"
          }
        ],
        "returnType": "Promise<User>",
        "methodPath": ""
      }
    ],
    "properties": []
  },
  {
    "name": "UserController",
    "documentation": "",
    "type": "typeof UserController",
    "constructors": [],
    "path": "user",
    "methods": [
      {
        "name": "create",
        "documentation": "",
        "parameters": [
          {
            "name": "createUserDto",
            "type": "CreateUserDto",
            "decorator": "Body"
          }
        ],
        "returnType": "Promise<User>",
        "methodPath": "",
        "httpMethod": "POST"
      },
      {
        "name": "findAll",
        "documentation": "",
        "parameters": [],
        "returnType": "Promise<User[]>",
        "methodPath": "",
        "httpMethod": "GET"
      },
      {
        "name": "findOneByJwtPayload",
        "documentation": "",
        "parameters": [
          {
            "name": "authorization",
            "type": "string",
            "decorator": "Headers"
          }
        ],
        "returnType": "Promise<User>",
        "methodPath": "/findOneByJwtPayload",
        "httpMethod": "GET"
      },
      {
        "name": "findOne",
        "documentation": "",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "decorator": "Param"
          }
        ],
        "returnType": "Promise<User>",
        "methodPath": ":id",
        "httpMethod": "GET"
      },
      {
        "name": "findOneByUsername",
        "documentation": "",
        "parameters": [
          {
            "name": "username",
            "type": "string",
            "decorator": "Param"
          }
        ],
        "returnType": "Promise<User>",
        "methodPath": ":username",
        "httpMethod": "GET"
      },
      {
        "name": "update",
        "documentation": "",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "decorator": "Param"
          },
          {
            "name": "updateUserDto",
            "type": "CreateUserDto",
            "decorator": "Body"
          }
        ],
        "returnType": "Promise<User>",
        "methodPath": ":id",
        "httpMethod": "PUT"
      },
      {
        "name": "remove",
        "documentation": "",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "decorator": "Param"
          }
        ],
        "returnType": "Promise<User>",
        "methodPath": ":id",
        "httpMethod": "DELETE"
      }
    ],
    "properties": []
  },
  {
    "name": "UserModule",
    "documentation": "",
    "type": "typeof UserModule",
    "constructors": [],
    "path": "",
    "methods": [],
    "properties": []
  },
  {
    "name": "AppModule",
    "documentation": "",
    "type": "typeof AppModule",
    "constructors": [],
    "path": "",
    "methods": [],
    "properties": []
  },
  {
    "name": "BookController",
    "documentation": "",
    "type": "typeof BookController",
    "constructors": [],
    "path": "book",
    "methods": [
      {
        "name": "getAllBooks",
        "documentation": "",
        "parameters": [],
        "returnType": "Promise<Book[]>",
        "methodPath": "",
        "httpMethod": "GET"
      },
      {
        "name": "getUserBooks",
        "documentation": "",
        "parameters": [
          {
            "name": "userId",
            "type": "string",
            "decorator": "Query"
          }
        ],
        "returnType": "Promise<Book[]>",
        "methodPath": "/getUserBooks",
        "httpMethod": "GET"
      },
      {
        "name": "updateBook",
        "documentation": "",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "decorator": "Param"
          },
          {
            "name": "updateBookDto",
            "type": "UpdateBookDto",
            "decorator": "Body"
          }
        ],
        "returnType": "Promise<Book>",
        "methodPath": ":id",
        "httpMethod": "PATCH"
      },
      {
        "name": "getBookById",
        "documentation": "",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "decorator": "Param"
          }
        ],
        "returnType": "Promise<Book>",
        "methodPath": ":id",
        "httpMethod": "GET"
      },
      {
        "name": "addBook",
        "documentation": "",
        "parameters": [
          {
            "name": "createBookDto",
            "type": "CreateBookDto",
            "decorator": "Body"
          }
        ],
        "returnType": "Promise<Book>",
        "methodPath": "",
        "httpMethod": "POST"
      },
      {
        "name": "deleteBook",
        "documentation": "",
        "parameters": [
          {
            "name": "id",
            "type": "string",
            "decorator": "Param"
          }
        ],
        "returnType": "Promise<Book>",
        "methodPath": ":id",
        "httpMethod": "DELETE"
      }
    ],
    "properties": []
  }
]